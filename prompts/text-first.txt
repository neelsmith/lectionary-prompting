Write a single-page webapp using HTML, CSS and javascript for working with readings from the Revised Common Lectionary (RCL). Always provide a complete single file in your replies to my queries.

Start by finding a Sunday date to use: if today is a Sunday, use today's date; otherwise use the date of next Sunday. Determine which lectionary cycle the Sunday date belongs to, that is, A, B, or C. Display the Sunday date and the lectionary cycle. Find the calendar dates for the the first and last Sunday in the selected lectionary cycle. Include these in parentheses next to the display of the cycle.

Add a one-month view of the calendar. Set it by default to display the month with the current date. Allow the user to navigate the month display forward and backward, and to select a date by clicking on it. When the user changes the displayed month, the label giving the lectionary year (A,B,C) with its beginning and end dates should be updated so that it always includes the currently displayed month.


---


Excellent. Now label Christmas Day and Easter on the month display if they fall within the displayed month. Likewise label the four Sundays preceding Christmas Day as "Advent 1", "Advent 2", etc., if they any of them fall within the displayed month. Frame the dates for the Advent Sundays and the date for Christmas Day with a light purple border (the liturgical color of Advent.)

---

Labels are great but I don't see frame colors on the specified dates. Please add a rounded rect framing the days on the calendars I've asked you to highlight: Advent Sundays and Christmas Day, purple frame.

---

 Now I want to add a new feature. Iâ€™m attaching a delimited-text file with assigned readings for liturgical year A. The delimited-text data has 5 columns separated by the pipe character '|', and has a header line. The first column gives the name of the labelled data, 2nd is the assigned Psalms, 3rd is the Old Testament, 4th is the New Testament, and 5th is the Gospel. If the user clicks on a labeled day on the month display in year A, list the assigned readings for the Psalms, Old Testament, New Testament and Gospel for that day. 

---

Great.

Let's change the labelling of the Sundays in the year between Trinity and Christ the King. We will find the Sunday in Pentecost by counting *forward* from Trinity beginning from 2. That is, the first Sunday after Trinity will be "Pentecost 2", the following Sunday will be "Pentecost 3", etc. We will also find the Proper by counting *backwards* from Christ the King. The Sunday before Christ the King is "Proper 28", the preceding Sunday is "Proper 27", etc.  Use the proper identifier to find the reading (e.g., "Proper 28"), but label the calendar with both the Pentecost Sunday *and* the Proper number.

---

Dont' abbreviate calendar labels with ellipses. Put the full label on the calendar.
--

Great. Let's add the display of assigned readings for all Sundays between Pentecost and Christ the King. For these Sundays, the readings will be listed in the data for Year A by the Proper number. E.g., a Sunday labelled "Pentecost 2/Proper 7" will have readings identified in the data table as "Proper 7".

---

Frame the Sundays for Christ the King and for all the Sundays between Pentecost and Christ the King in green, the liturgical color for the season following Pentecost.