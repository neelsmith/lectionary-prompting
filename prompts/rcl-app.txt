Write a single-page webapp using HTML, CSS and javascript for working with readings from the Revised Common Lectionary (RCL). Always provide a complete single file in your replies to queries.

Start by finding a Sunday date to use: if today is a Sunday, use today's date; otherwise use the date of next Sunday. Determine which lectionary cycle the Sunday date belongs to, that is, A, B, or C. Display the Sunday date and the lectionary cycle. 

---

Now add a date picker to let the user optionally choose a different date to use instead of the default Sunday date.

---

Please find the calendar dates for the the first and last Sunday in the selected lectionary cycle. Include these in parentheses next to the display of the cycle.

---

Add a one-month view of the calendar. Set it by default to display the month with the date the user selected. Allow the user to navigate the month display forward and backward.

---

On the month display, label Christmas Day and Easter if they fall within the displayed dates.

---

Now label the four Sundays of Advent on the month display (e.g., "Advent 1", "Advent 2"...). Frame these Sundays with a light purple border (the liturgical color of Advent.)

---

Now remove the initial date picker: let the user use only the month display of the calendar to choose a date. Also, frame the date for Christmas Day in the same purple as for Advent Sundays.

---


On the month display, label Epiphany if it falls within the displayed dates. Label any Sundays between Christmas Day and Epiphany as "Christmastide 1", "Christmastide 2", etc.

---

Now label Ash Wednesday on the month display and frame it in black. Label the Sunday before Ash Wednesday "Transfiguration Sunday". Label the Sundays between Epiphany and Ash Wednesday "Epiphany 1", "Epiphany 2", etc., and frame them in a light green, the liturgical color of Epiphany.

---

There should be no frame on Transfiguration Sunday.
Now label the Sundays between Ash Wednesday and Easter as "Lent 1", "Lent 2", etc, and frame them in the same purple as Advent.


---

When the user changes the displayed month, the label giving the lectionary year (A,B,C) with its beginning and end dates should be updated so that it always includes the currently displayed month.

---

Change the label on the Sunday before Easter to "Palm Sunday", and frame it in red, the liturgical color for Palm Sunday.

---

Label Pentecost on the month display, and frame it in red. Label the Sundays between Easter and Pentecost "Easter 1", "Easter 2", etc.

---

Label the Sunday after Pentecost "Trinity Sunday", with no label. Label the last Sunday before Advent "Christ the King", with no label. Label the Sundays between Trinity Sunday and Christ the King "Pentecost 2", "Pentecost 3", etc. (Note that we start with 2 since we've already labelled the first Sunday after Pentecost as Trinity Sunday.) The Sundays labeled "Pentecost 2" etc should be framed in the same green as used for Epiphanytide.

---

Great. Now I want to add a new feature. I’m attaching a delimited-text file with assigned readings for liturgical year A. The delimited-text data has 5 columns separated by the pipe character '|', and has a header line. The first column gives the name of the labelled data, 2nd is the assigned Psalms, 3rd is the Old Testament, 4th is the New Testament, and 5th is the Gospel. If the user clicks on a labeled day on the month display in year A **NOT** in the season of Epiphany (identified by labels like "Epiphany 1", "Epiphany 2"), list the assigned readings for the Psalms, Old Testament, New Testament and Gospel. 

---

Nothing happens when I click on a labelled date in year A.

---

Excellent. Let’s do the same for year B using this data set.

---

Clicking on labelled dates in year A works, but nothing happens when I click on a labelled date in year B.

---

Great. Now let's implement functionality for year C using this data set.
---

Wonderful. Now I want to change the behavior. Now I want users to be able to see reading selectionns when they click on a date in Epiphany labelled "Epiphany 1", "Epiphany 2", etc. but *not* when they click on a date in the season of Pentecost labelled "Pentecost 1", "Pentecost 2", etc.  

---

For some reason, readings for dates labeled "Christmastide 1", etc, are not being displayed. Could you fix this?

---

Now I'd like to add support for Sundays in Pentecost labelled "Pentecost 1", "Pentecost 2", etc. The readings for these Sundays appear in the data for years A,B,C as "Proper 1", "Proper 2" etc. To match the correct entry for a "Proper" with a Sunday in the Pentecost series,  we begin by counting *backward* from "Christ the King" Sunday. "Christ the King" is always the same as "Proper 29". The Sunday *before* Christ the King is given the readings from "Proper 28"; the Sunday two weeks before Christ the King is given the readings from "Proper 27", etc. The longest possible sequence of Pentecost Sundays would count all the way back to "Proper 1" but in most years, we will reach the Sunday labelled "Epiphany 1" before then.

---

Not getting any readings displayed when clicking on dates in Pentecost. The correct readings selected from the listing of Propers should be displayed when the user clicks on a date in Pentecost.